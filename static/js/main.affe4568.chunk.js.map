{"version":3,"sources":["components/auth-button.js","pages/auth/signin.js","pages/auth/signup.js","routes/public.js","components/chat-input.js","components/message.js","redux/actions/work-actions.js","pages/private/work.js","redux/actions/flood-actions.js","pages/private/flood.js","routes/private.js","App.js","redux/reducers/flood.reducer.js","redux/reducers/work-reducer.js","redux/reducers/root-reducer.js","redux/store.js","index.js"],"names":["AuthButton","title","agreement","style","className","type","disabled","Signin","history","useHistory","useState","error","setError","formik","useFormik","initialValues","username","password","onSubmit","values","atob","localStorage","getItem","sessionStorage","setItem","push","go","to","handleSubmit","id","name","placeholder","autoComplete","onChange","handleChange","value","Signup","btoa","Public","exact","path","component","ChatInput","cb","initMessage","message","setMessage","useEffect","sendMessageHandleClick","e","target","onKeyDown","key","onKeyDownHandler","onClick","Message","user","dispatch","deleteWorkMessage","deleteFloodMessage","Work","useDispatch","messages","useSelector","state","work","length","sort","a","b","map","str","editWorkMessage","setNewWorkMessage","Flood","flood","editFloodMessage","setNewFloodMessage","Private","setTitle","removeItem","App","userIsAuth","setUserIsAuth","authUser","useRef","current","initialStore","FloodReducer","store","action","filter","elem","workReducer","RootReducer","combineReducers","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.affe4568.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst AuthButton = ({title, agreement}) => {\r\n  const style = (title === 'СОЗДАТЬ ПРОФИЛЬ' && !agreement)\r\n    ? \"bg-blue-500 text-white font-bold py-2 px-4 rounded opacity-50 cursor-not-allowed w-full sm:w-auto\"\r\n    : \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-full sm:w-auto\"\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center py-4\">\r\n      <button\r\n        className={style}\r\n        type=\"submit\"\r\n        disabled={title === 'СОЗДАТЬ ПРОФИЛЬ' && !agreement}\r\n      >\r\n        {title}\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AuthButton\r\n","import React, { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useFormik } from 'formik';\r\n\r\nimport AuthButton from '../../components/auth-button';\r\n\r\nconst Signin = () => {\r\n  const history = useHistory();\r\n  \r\n  const [error, setError] = useState('');\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: '',\r\n      password: '',\r\n    },\r\n    onSubmit: (values) => {\r\n      if (\r\n        (atob(localStorage.getItem('testUser')) === values.username &&\r\n          atob(localStorage.getItem('testPwd')) === values.password) ||\r\n        (atob(localStorage.getItem('User')) === values.username &&\r\n          atob(localStorage.getItem('Password')) === values.password)\r\n      ) {\r\n        sessionStorage.setItem('Auth', true)\r\n        history.push('/');\r\n        history.go()\r\n      } else {\r\n        setError('неверное имя пользователя или пароль');\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-1 grid-rows-1 md:grid-cols-3 md:grid-rows-3 w-screen h-screen\">\r\n      <div className=\"w-full h-full col-start-1 lg:col-start-2 row-start-1 lg:row-start-2\">\r\n        <header className=\"text-blue-500 text-sm font-bold p-4 text-right\">\r\n          <Link to=\"/signup\" className=\"px-4\">\r\n            СОЗДАТЬ ПРОФИЛЬ\r\n          </Link>\r\n        </header>\r\n        <h1 className=\"text-xl font-bold px-8\">Вход пользователя</h1>\r\n        <form className=\"bg-white rounded px-8 pt-6 pb-8 mb-4 h-1/9\" onSubmit={formik.handleSubmit}>\r\n          <div className=\"mb-4\">\r\n            <input\r\n              id=\"username\"\r\n              type=\"email\"\r\n              name=\"username\"\r\n              placeholder=\"введите ваш email адрес\"\r\n              autoComplete=\"username\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.username}\r\n              className=\"appearance-none bg-transparent border-b-2 border-blue-500 w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none lowercase\"\r\n            />\r\n          </div>\r\n          <div className=\"mb-2\">\r\n            <input\r\n              id=\"password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"введите ваш пароль\"\r\n              autoComplete=\"current-password\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.password}\r\n              className=\"appearance-none bg-transparent border-b-2 border-blue-500 w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none\"\r\n            />\r\n          </div>\r\n          {error && <div className=\"text-red-600 text-center\">{error}</div>}\r\n          <AuthButton title={'ВОЙТИ'} />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import React from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useFormik } from 'formik';\r\n\r\nimport AuthButton from '../../components/auth-button'\r\n\r\nconst Signup = () => {\r\n  const history = useHistory();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    onSubmit: (values) => {\r\n      localStorage.setItem('User', btoa(values.username))\r\n      localStorage.setItem('Password', btoa(values.password))\r\n      history.push('/signin')\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-1 grid-rows-1 md:grid-cols-3 md:grid-rows-3 w-screen h-screen\">\r\n      <div className=\"w-full h-full col-start-1 lg:col-start-2 row-start-1 lg:row-start-2\">\r\n        <header className=\"text-blue-500 text-sm font-bold p-4 text-right\">\r\n          <Link to=\"/signin\" className=\"px-4\">\r\n            ВОЙТИ\r\n          </Link>\r\n        </header>\r\n        <h1 className=\"text-xl font-bold px-8\">Регистрация пользователя</h1>\r\n        <form className=\"bg-white rounded px-8 pt-6 pb-8 mb-4 h-1/9\" onSubmit={formik.handleSubmit}>\r\n          <div className=\"mb-4\">\r\n            <input\r\n              id=\"username\"\r\n              type=\"email\"\r\n              name=\"username\"\r\n              placeholder=\"введите ваш email адрес\"\r\n              autoComplete=\"username\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.username}\r\n              className=\"appearance-none bg-transparent border-b-2 border-blue-500 w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none lowercase\"\r\n            />\r\n          </div>\r\n          <div className=\"mb-2\">\r\n            <input\r\n              id=\"password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"введите ваш пароль\"\r\n              autoComplete=\"current-password\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.password}\r\n              className=\"appearance-none bg-transparent border-b-2 border-blue-500 w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none\"\r\n            />\r\n          </div>\r\n          <AuthButton title={'СОЗДАТЬ'} />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\n\r\nimport Signin from '../pages/auth/signin'\r\nimport Signup from '../pages/auth/signup'\r\n\r\nconst Public = () => {\r\n\r\n  return (\r\n    <Switch>\r\n      <Route exact path='/signin' component={Signin} />\r\n      <Route exact path='/signup' component={Signup} />\r\n      <Route exact path='*'>\r\n        <Redirect to=\"/signin\" />\r\n      </Route>\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default Public\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nconst ChatInput = ({ cb, initMessage }) => {\r\n  const [message, setMessage] = useState('')\r\n\r\n  useEffect(() => {\r\n    if (initMessage.message) setMessage(initMessage.message)\r\n  }, [initMessage])\r\n\r\n  const sendMessageHandleClick = () => {\r\n    cb(message, initMessage.id)\r\n    setMessage('')\r\n  }\r\n\r\n  const onKeyDownHandler = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      sendMessageHandleClick()\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 w-full border-blue-300 border-width-2 flex gap-1\">\r\n      <input\r\n        className=\"appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n        type=\"text\"\r\n        value={message}\r\n        onChange={(e) => setMessage(e.target.value)}\r\n        onKeyDown={(e) => onKeyDownHandler(e)}\r\n      />\r\n      <button\r\n        type=\"button\"\r\n        onClick={sendMessageHandleClick}\r\n        className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\r\n      >\r\n        Отправить\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChatInput\r\n","import React from \"react\";\r\nimport { TiDeleteOutline, TiEdit } from 'react-icons/ti'\r\n\r\nconst Message = ({\r\n  user,\r\n  message,\r\n  setMessage,\r\n  dispatch,\r\n  deleteWorkMessage,\r\n  deleteFloodMessage,\r\n}) => {\r\n  return (\r\n    <div className=\"w-full\" key={message.id}>\r\n      <div\r\n        className={\r\n          user !== message.username\r\n            ? \"bg-gray-300 w-3/4 mx-4 my-2 p-2 rounded-lg\"\r\n            : \"bg-green-300 float-right w-3/4 mx-4 my-2 p-2 rounded-lg clearfix\"\r\n        }\r\n      >\r\n        <div className=\"grid\">\r\n          <div className=\"grid justify-items-start\">\r\n            <label className=\"flex justify-center items-center text-gray-800 font-bold\">{message.username}</label>\r\n            <span className=\"flex justify-center text-gray-800 items-center\">{message.message}</span>\r\n          </div>\r\n          {user === message.username && (\r\n            <div className=\"flex justify-end gap-4\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={() =>\r\n                  setMessage({\r\n                    id: message.id,\r\n                    message: message.message,\r\n                  })\r\n                }\r\n              >\r\n                <TiEdit />\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() =>\r\n                  deleteWorkMessage\r\n                    ? dispatch(deleteWorkMessage(message.id))\r\n                    : dispatch(deleteFloodMessage(message.id))\r\n                }\r\n              >\r\n                <TiDeleteOutline />\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","export const NEW_WORK_MESSAGE = 'NEW_WORK_MESSAGE',\r\n  EDIT_WORK_MESSAGE = 'GET_EXIST_MESSAGE',\r\n  DELETE_WORK_MESSAGE = 'DELETE_WORK_MESSAGE'\r\n\r\nexport const setNewWorkMessage = (str, user) => {\r\n  return {\r\n    type: NEW_WORK_MESSAGE,\r\n    message: str,\r\n    username: user,\r\n  }\r\n},\r\n\r\neditWorkMessage = (str, user, id) => {\r\n  return {\r\n    type: EDIT_WORK_MESSAGE,\r\n    message: str,\r\n    username: user,\r\n    id: id\r\n  }\r\n},\r\n\r\ndeleteWorkMessage = (id) => {\r\n  return {\r\n    type: DELETE_WORK_MESSAGE,\r\n    id: id\r\n  }\r\n}\r\n\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport ChatInput from \"../../components/chat-input\";\r\nimport Message from \"../../components/message\";\r\n\r\nimport {\r\n  setNewWorkMessage,\r\n  editWorkMessage,\r\n  deleteWorkMessage,\r\n} from \"../../redux/actions/work-actions\";\r\n\r\nconst Work = () => {\r\n  const dispatch = useDispatch();\r\n  const messages = useSelector((state) => state.work);\r\n  const [message, setMessage] = useState({});\r\n\r\n  const user = atob(localStorage.getItem(\"User\"));\r\n\r\n  return (\r\n    <>\r\n      <section id=\"messages\" className=\"mb-auto overflow-y-auto\">\r\n        {messages.length\r\n          ? messages\r\n              .sort((a, b) => a.id - b.id)\r\n              .map((message) => (\r\n                <Message\r\n                  key={message.id}\r\n                  user={user}\r\n                  message={message}\r\n                  setMessage={setMessage}\r\n                  dispatch={dispatch}\r\n                  deleteWorkMessage={deleteWorkMessage}\r\n                />\r\n              ))\r\n          : null}\r\n      </section>\r\n      <div className=\"w-full flex bg-blue-100\">\r\n        <ChatInput\r\n          cb={(str, id) =>\r\n            id\r\n              ? dispatch(editWorkMessage(str, user, id))\r\n              : dispatch(setNewWorkMessage(str, user))\r\n          }\r\n          initMessage={message}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Work;\r\n","export const NEW_FLOOD_MESSAGE = 'NEW_FLOOD_MESSAGE',\r\n  EDIT_FLOOD_MESSAGE = 'EDIT_FLOOD_MESSAGE',\r\n  DELETE_FLOOD_MESSAGE = 'DELETE_FLOOD_MESSAGE'\r\n\r\nexport const setNewFloodMessage = (str, user) => {\r\n  return {\r\n    type: NEW_FLOOD_MESSAGE,\r\n    message: str,\r\n    username: user\r\n  }\r\n},\r\n\r\neditFloodMessage = (str, user, id) => {\r\n  return {\r\n    type: EDIT_FLOOD_MESSAGE,\r\n    message: str,\r\n    username: user,\r\n    id: id\r\n  }\r\n},\r\n\r\ndeleteFloodMessage = (id) => {\r\n  return {\r\n    type: DELETE_FLOOD_MESSAGE,\r\n    id: id\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport ChatInput from \"../../components/chat-input\";\r\nimport Message from \"../../components/message\";\r\n\r\nimport {\r\n  setNewFloodMessage,\r\n  editFloodMessage,\r\n  deleteFloodMessage,\r\n} from \"../../redux/actions/flood-actions\";\r\n\r\nconst Flood = () => {\r\n  const dispatch = useDispatch();\r\n  const messages = useSelector((state) => state.flood);\r\n  const [message, setMessage] = useState({});\r\n\r\n  const user = atob(localStorage.getItem(\"User\"));\r\n\r\n  return (\r\n    <>\r\n      <section id=\"messages\" className=\"mb-auto overflow-y-auto\">\r\n        {messages.length\r\n          ? messages\r\n              .sort((a, b) => a.id - b.id)\r\n              .map((message) => (\r\n                <Message\r\n                  key={message.id}\r\n                  user={user}\r\n                  message={message}\r\n                  setMessage={setMessage}\r\n                  dispatch={dispatch}\r\n                  deleteWorkMessage={deleteFloodMessage}\r\n                />\r\n              ))\r\n          : null}\r\n      </section>\r\n      <div className=\"w-full flex bg-blue-100\">\r\n        <ChatInput\r\n          cb={(str, id) =>\r\n            id\r\n              ? dispatch(editFloodMessage(str, user, id))\r\n              : dispatch(setNewFloodMessage(str, user))\r\n          }\r\n          initMessage={message}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Flood;\r\n","import React, { useState } from \"react\";\r\nimport { Switch, Route, Redirect, useHistory, Link } from \"react-router-dom\";\r\n\r\nimport Work from \"../pages/private/work\";\r\nimport Flood from \"../pages/private/flood\";\r\n\r\nconst Private = () => {\r\n  const history = useHistory();\r\n  const [title, setTitle] = useState(\"Рабочий чат\");\r\n\r\n  const logoutHandleClick = () => {\r\n    sessionStorage.removeItem(\"Auth\");\r\n    history.push(\"/\");\r\n    history.go();\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-screen flex\">\r\n      <div className=\"w-64 bg-blue-200 p-4 rounded-l-lg h-full flex flex-col\">\r\n        <span className=\"font-bold pt-4 pb-8 text-center font-mono text-lg text-gray-800\">\r\n          Planktonics\r\n        </span>\r\n        <Link\r\n          to=\"/work\"\r\n          className=\"bg-white hover:bg-gray-100 text-center text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow\"\r\n          onClick={() => setTitle(\"Рабочий чат\")}\r\n        >\r\n          Рабочий чат\r\n        </Link>\r\n        <Link\r\n          to=\"/flood\"\r\n          className=\"bg-white hover:bg-gray-100 text-center text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow\"\r\n          onClick={() => setTitle(\"Флудилка\")}\r\n        >\r\n          Флудилка\r\n        </Link>\r\n        <button\r\n          type=\"button\"\r\n          className=\"pt-8\"\r\n          onClick={logoutHandleClick}\r\n        >\r\n          Выйти\r\n        </button>\r\n      </div>\r\n      <div className=\"w-full flex flex-col h-screen justify-between overflow-hidden text-center\">\r\n        <div className=\"flex w-full h-24 text-xl text-gray-800 font-bold bg-blue-200 p-4 rounded-tr-lg justify-center\">\r\n          {title}\r\n        </div>\r\n        <Switch>\r\n          <Route exact path=\"/work\" component={Work} />\r\n          <Route exact path=\"/flood\" component={Flood} />\r\n          <Route exact path=\"*\">\r\n            <Redirect to=\"/work\" />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Private;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nimport Public from './routes/public';\r\nimport Private from './routes/private';\r\n\r\nconst setTestUserToLocalStorage = () => {\r\n  localStorage.setItem('testUser', btoa('testuser@planktonics.ru'));\r\n  localStorage.setItem('testPwd', btoa('qwerty'));\r\n};\r\n\r\nfunction App() {\r\n  const [userIsAuth, setUserIsAuth] = useState(sessionStorage.getItem('Auth') || null);\r\n  const authUser = useRef(false);\r\n\r\n  useEffect(() => {\r\n    setTestUserToLocalStorage();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    userIsAuth && setUserIsAuth(true);\r\n    if (sessionStorage.getItem('Auth')) authUser.current = true;\r\n  }, [userIsAuth]);\r\n\r\n  return <>{authUser.current ? <Private /> : <Public />}</>;\r\n}\r\n\r\nexport default App;\r\n","import { NEW_FLOOD_MESSAGE, EDIT_FLOOD_MESSAGE, DELETE_FLOOD_MESSAGE } from '../actions/flood-actions';\r\n\r\nconst initialStore = [\r\n  {\r\n    id: 1,\r\n    username: 'admin',\r\n    message: 'Hi, everyone!',\r\n  },\r\n  {\r\n    id: 2,\r\n    username: 'admin',\r\n    message: 'пофлудим?',\r\n  },\r\n];\r\n\r\nconst FloodReducer = (store = initialStore, action) => {\r\n  switch (action.type) {\r\n    case NEW_FLOOD_MESSAGE:\r\n      return [\r\n        ...store,\r\n        { id: store.sort((a, b) => b.id - a.id)[0].id + 1, username: action.username, message: action.message },\r\n      ];\r\n\r\n    case EDIT_FLOOD_MESSAGE:\r\n      return [\r\n        ...store.filter(elem => elem.id !== action.id),\r\n        {\r\n          id: action.id,\r\n          username: action.username,\r\n          message: action.message,\r\n        }\r\n      ]\r\n\r\n    case DELETE_FLOOD_MESSAGE:\r\n      return [\r\n        ...store.filter(elem => elem.id !== action.id)\r\n      ]\r\n\r\n    default:\r\n      return store;\r\n  }\r\n};\r\n\r\nexport default FloodReducer;\r\n","import { NEW_WORK_MESSAGE, EDIT_WORK_MESSAGE, DELETE_WORK_MESSAGE } from \"../actions/work-actions\";\r\n\r\nconst initialStore = [\r\n  {\r\n    id: 1,\r\n    username: \"admin\",\r\n    message: \"Hi, everyone!\",\r\n  },\r\n  {\r\n    id: 2,\r\n    username: \"admin\",\r\n    message: \"поработаем?\",\r\n  },\r\n];\r\n\r\nconst workReducer = (store = initialStore, action) => {\r\n  switch (action.type) {\r\n    case NEW_WORK_MESSAGE:\r\n      return [\r\n        ...store,\r\n        {\r\n          id: store.sort((a, b) => b.id - a.id)[0].id + 1,\r\n          username: action.username,\r\n          message: action.message,\r\n        },\r\n      ];\r\n\r\n    case EDIT_WORK_MESSAGE:\r\n      return [\r\n        ...store.filter(elem => elem.id !== action.id),\r\n        {\r\n          id: action.id,\r\n          username: action.username,\r\n          message: action.message,\r\n        }\r\n      ]\r\n\r\n    case DELETE_WORK_MESSAGE:\r\n      return [\r\n        ...store.filter(elem => elem.id !== action.id)\r\n      ]\r\n\r\n    default:\r\n      return store;\r\n  }\r\n};\r\n\r\nexport default workReducer;\r\n","import { combineReducers } from 'redux';\r\nimport FloodReducer from './flood.reducer';\r\nimport workReducer from './work-reducer';\r\n\r\nconst RootReducer = combineReducers({\r\n  flood: FloodReducer,\r\n  work: workReducer\r\n})\r\n\r\nexport default RootReducer","import { createStore } from 'redux'\r\nimport RootReducer from './reducers/root-reducer'\r\n\r\nconst store = createStore(\r\n  RootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n)\r\n\r\nexport default store","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <React.StrictMode>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </React.StrictMode>\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}